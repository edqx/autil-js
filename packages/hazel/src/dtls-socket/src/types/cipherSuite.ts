import { BinaryObjectInstance, BinaryReader, BinaryWriter } from "@autil/helpers";

export class CipherSuite implements BinaryObjectInstance {
  static TLS_NULL_WITH_NULL_NULL = new CipherSuite(0x0000);
  static TLS_RSA_WITH_NULL_MD5 = new CipherSuite(0x0001);
  static TLS_RSA_WITH_NULL_SHA = new CipherSuite(0x0002);
  static TLS_RSA_EXPORT_WITH_RC4_40_MD5 = new CipherSuite(0x0003);
  static TLS_RSA_WITH_RC4_128_MD5 = new CipherSuite(0x0004);
  static TLS_RSA_WITH_RC4_128_SHA = new CipherSuite(0x0005);
  static TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5 = new CipherSuite(0x0006);
  static TLS_RSA_WITH_IDEA_CBC_SHA = new CipherSuite(0x0007);
  static TLS_RSA_EXPORT_WITH_DES40_CBC_SHA = new CipherSuite(0x0008);
  static TLS_RSA_WITH_DES_CBC_SHA = new CipherSuite(0x0009);
  static TLS_RSA_WITH_3DES_EDE_CBC_SHA = new CipherSuite(0x000A);
  static TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA = new CipherSuite(0x000B);
  static TLS_DH_DSS_WITH_DES_CBC_SHA = new CipherSuite(0x000C);
  static TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA = new CipherSuite(0x000D);
  static TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA = new CipherSuite(0x000E);
  static TLS_DH_RSA_WITH_DES_CBC_SHA = new CipherSuite(0x000F);
  static TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA = new CipherSuite(0x0010);
  static TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA = new CipherSuite(0x0011);
  static TLS_DHE_DSS_WITH_DES_CBC_SHA = new CipherSuite(0x0012);
  static TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA = new CipherSuite(0x0013);
  static TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA = new CipherSuite(0x0014);
  static TLS_DHE_RSA_WITH_DES_CBC_SHA = new CipherSuite(0x0015);
  static TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA = new CipherSuite(0x0016);
  static TLS_DH_anon_EXPORT_WITH_RC4_40_MD5 = new CipherSuite(0x0017);
  static TLS_DH_anon_WITH_RC4_128_MD5 = new CipherSuite(0x0018);
  static TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA = new CipherSuite(0x0019);
  static TLS_DH_anon_WITH_DES_CBC_SHA = new CipherSuite(0x001A);
  static TLS_DH_anon_WITH_3DES_EDE_CBC_SHA = new CipherSuite(0x001B);
  static TLS_KRB5_WITH_DES_CBC_SHA = new CipherSuite(0x001E);
  static TLS_KRB5_WITH_3DES_EDE_CBC_SHA = new CipherSuite(0x001F);
  static TLS_KRB5_WITH_RC4_128_SHA = new CipherSuite(0x0020);
  static TLS_KRB5_WITH_IDEA_CBC_SHA = new CipherSuite(0x0021);
  static TLS_KRB5_WITH_DES_CBC_MD5 = new CipherSuite(0x0022);
  static TLS_KRB5_WITH_3DES_EDE_CBC_MD5 = new CipherSuite(0x0023);
  static TLS_KRB5_WITH_RC4_128_MD5 = new CipherSuite(0x0024);
  static TLS_KRB5_WITH_IDEA_CBC_MD5 = new CipherSuite(0x0025);
  static TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA = new CipherSuite(0x0026);
  static TLS_KRB5_EXPORT_WITH_RC2_CBC_40_SHA = new CipherSuite(0x0027);
  static TLS_KRB5_EXPORT_WITH_RC4_40_SHA = new CipherSuite(0x0028);
  static TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5 = new CipherSuite(0x0029);
  static TLS_KRB5_EXPORT_WITH_RC2_CBC_40_MD5 = new CipherSuite(0x002A);
  static TLS_KRB5_EXPORT_WITH_RC4_40_MD5 = new CipherSuite(0x002B);
  static TLS_PSK_WITH_NULL_SHA = new CipherSuite(0x002C);
  static TLS_DHE_PSK_WITH_NULL_SHA = new CipherSuite(0x002D);
  static TLS_RSA_PSK_WITH_NULL_SHA = new CipherSuite(0x002E);
  static TLS_RSA_WITH_AES_128_CBC_SHA = new CipherSuite(0x002F);
  static TLS_DH_DSS_WITH_AES_128_CBC_SHA = new CipherSuite(0x0030);
  static TLS_DH_RSA_WITH_AES_128_CBC_SHA = new CipherSuite(0x0031);
  static TLS_DHE_DSS_WITH_AES_128_CBC_SHA = new CipherSuite(0x0032);
  static TLS_DHE_RSA_WITH_AES_128_CBC_SHA = new CipherSuite(0x0033);
  static TLS_DH_anon_WITH_AES_128_CBC_SHA = new CipherSuite(0x0034);
  static TLS_RSA_WITH_AES_256_CBC_SHA = new CipherSuite(0x0035);
  static TLS_DH_DSS_WITH_AES_256_CBC_SHA = new CipherSuite(0x0036);
  static TLS_DH_RSA_WITH_AES_256_CBC_SHA = new CipherSuite(0x0037);
  static TLS_DHE_DSS_WITH_AES_256_CBC_SHA = new CipherSuite(0x0038);
  static TLS_DHE_RSA_WITH_AES_256_CBC_SHA = new CipherSuite(0x0039);
  static TLS_DH_anon_WITH_AES_256_CBC_SHA = new CipherSuite(0x003A);
  static TLS_RSA_WITH_NULL_SHA256 = new CipherSuite(0x003B);
  static TLS_RSA_WITH_AES_128_CBC_SHA256 = new CipherSuite(0x003C);
  static TLS_RSA_WITH_AES_256_CBC_SHA256 = new CipherSuite(0x003D);
  static TLS_DH_DSS_WITH_AES_128_CBC_SHA256 = new CipherSuite(0x003E);
  static TLS_DH_RSA_WITH_AES_128_CBC_SHA256 = new CipherSuite(0x003F);
  static TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 = new CipherSuite(0x0040);
  static TLS_RSA_WITH_CAMELLIA_128_CBC_SHA = new CipherSuite(0x0041);
  static TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA = new CipherSuite(0x0042);
  static TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA = new CipherSuite(0x0043);
  static TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA = new CipherSuite(0x0044);
  static TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA = new CipherSuite(0x0045);
  static TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA = new CipherSuite(0x0046);
  static TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 = new CipherSuite(0x0067);
  static TLS_DH_DSS_WITH_AES_256_CBC_SHA256 = new CipherSuite(0x0068);
  static TLS_DH_RSA_WITH_AES_256_CBC_SHA256 = new CipherSuite(0x0069);
  static TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 = new CipherSuite(0x006A);
  static TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 = new CipherSuite(0x006B);
  static TLS_DH_anon_WITH_AES_128_CBC_SHA256 = new CipherSuite(0x006C);
  static TLS_DH_anon_WITH_AES_256_CBC_SHA256 = new CipherSuite(0x006D);
  static TLS_RSA_WITH_CAMELLIA_256_CBC_SHA = new CipherSuite(0x0084);
  static TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA = new CipherSuite(0x0085);
  static TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA = new CipherSuite(0x0086);
  static TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA = new CipherSuite(0x0087);
  static TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA = new CipherSuite(0x0088);
  static TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA = new CipherSuite(0x0089);
  static TLS_PSK_WITH_RC4_128_SHA = new CipherSuite(0x008A);
  static TLS_PSK_WITH_3DES_EDE_CBC_SHA = new CipherSuite(0x008B);
  static TLS_PSK_WITH_AES_128_CBC_SHA = new CipherSuite(0x008C);
  static TLS_PSK_WITH_AES_256_CBC_SHA = new CipherSuite(0x008D);
  static TLS_DHE_PSK_WITH_RC4_128_SHA = new CipherSuite(0x008E);
  static TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA = new CipherSuite(0x008F);
  static TLS_DHE_PSK_WITH_AES_128_CBC_SHA = new CipherSuite(0x0090);
  static TLS_DHE_PSK_WITH_AES_256_CBC_SHA = new CipherSuite(0x0091);
  static TLS_RSA_PSK_WITH_RC4_128_SHA = new CipherSuite(0x0092);
  static TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA = new CipherSuite(0x0093);
  static TLS_RSA_PSK_WITH_AES_128_CBC_SHA = new CipherSuite(0x0094);
  static TLS_RSA_PSK_WITH_AES_256_CBC_SHA = new CipherSuite(0x0095);
  static TLS_RSA_WITH_SEED_CBC_SHA = new CipherSuite(0x0096);
  static TLS_DH_DSS_WITH_SEED_CBC_SHA = new CipherSuite(0x0097);
  static TLS_DH_RSA_WITH_SEED_CBC_SHA = new CipherSuite(0x0098);
  static TLS_DHE_DSS_WITH_SEED_CBC_SHA = new CipherSuite(0x0099);
  static TLS_DHE_RSA_WITH_SEED_CBC_SHA = new CipherSuite(0x009A);
  static TLS_DH_anon_WITH_SEED_CBC_SHA = new CipherSuite(0x009B);
  static TLS_RSA_WITH_AES_128_GCM_SHA256 = new CipherSuite(0x009C);
  static TLS_RSA_WITH_AES_256_GCM_SHA384 = new CipherSuite(0x009D);
  static TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 = new CipherSuite(0x009E);
  static TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 = new CipherSuite(0x009F);
  static TLS_DH_RSA_WITH_AES_128_GCM_SHA256 = new CipherSuite(0x00A0);
  static TLS_DH_RSA_WITH_AES_256_GCM_SHA384 = new CipherSuite(0x00A1);
  static TLS_DHE_DSS_WITH_AES_128_GCM_SHA256 = new CipherSuite(0x00A2);
  static TLS_DHE_DSS_WITH_AES_256_GCM_SHA384 = new CipherSuite(0x00A3);
  static TLS_DH_DSS_WITH_AES_128_GCM_SHA256 = new CipherSuite(0x00A4);
  static TLS_DH_DSS_WITH_AES_256_GCM_SHA384 = new CipherSuite(0x00A5);
  static TLS_DH_anon_WITH_AES_128_GCM_SHA256 = new CipherSuite(0x00A6);
  static TLS_DH_anon_WITH_AES_256_GCM_SHA384 = new CipherSuite(0x00A7);
  static TLS_PSK_WITH_AES_128_GCM_SHA256 = new CipherSuite(0x00A8);
  static TLS_PSK_WITH_AES_256_GCM_SHA384 = new CipherSuite(0x00A9);
  static TLS_DHE_PSK_WITH_AES_128_GCM_SHA256 = new CipherSuite(0x00AA);
  static TLS_DHE_PSK_WITH_AES_256_GCM_SHA384 = new CipherSuite(0x00AB);
  static TLS_RSA_PSK_WITH_AES_128_GCM_SHA256 = new CipherSuite(0x00AC);
  static TLS_RSA_PSK_WITH_AES_256_GCM_SHA384 = new CipherSuite(0x00AD);
  static TLS_PSK_WITH_AES_128_CBC_SHA256 = new CipherSuite(0x00AE);
  static TLS_PSK_WITH_AES_256_CBC_SHA384 = new CipherSuite(0x00AF);
  static TLS_PSK_WITH_NULL_SHA256 = new CipherSuite(0x00B0);
  static TLS_PSK_WITH_NULL_SHA384 = new CipherSuite(0x00B1);
  static TLS_DHE_PSK_WITH_AES_128_CBC_SHA256 = new CipherSuite(0x00B2);
  static TLS_DHE_PSK_WITH_AES_256_CBC_SHA384 = new CipherSuite(0x00B3);
  static TLS_DHE_PSK_WITH_NULL_SHA256 = new CipherSuite(0x00B4);
  static TLS_DHE_PSK_WITH_NULL_SHA384 = new CipherSuite(0x00B5);
  static TLS_RSA_PSK_WITH_AES_128_CBC_SHA256 = new CipherSuite(0x00B6);
  static TLS_RSA_PSK_WITH_AES_256_CBC_SHA384 = new CipherSuite(0x00B7);
  static TLS_RSA_PSK_WITH_NULL_SHA256 = new CipherSuite(0x00B8);
  static TLS_RSA_PSK_WITH_NULL_SHA384 = new CipherSuite(0x00B9);
  static TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256 = new CipherSuite(0x00BA);
  static TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256 = new CipherSuite(0x00BB);
  static TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256 = new CipherSuite(0x00BC);
  static TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256 = new CipherSuite(0x00BD);
  static TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 = new CipherSuite(0x00BE);
  static TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256 = new CipherSuite(0x00BF);
  static TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256 = new CipherSuite(0x00C0);
  static TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256 = new CipherSuite(0x00C1);
  static TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256 = new CipherSuite(0x00C2);
  static TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256 = new CipherSuite(0x00C3);
  static TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256 = new CipherSuite(0x00C4);
  static TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256 = new CipherSuite(0x00C5);
  static TLS_SM4_GCM_SM3 = new CipherSuite(0x00C6);
  static TLS_SM4_CCM_SM3 = new CipherSuite(0x00C7);
  static TLS_EMPTY_RENEGOTIATION_INFO_SCSV = new CipherSuite(0x00FF);
  static TLS_AES_128_GCM_SHA256 = new CipherSuite(0x1301);
  static TLS_AES_256_GCM_SHA384 = new CipherSuite(0x1302);
  static TLS_CHACHA20_POLY1305_SHA256 = new CipherSuite(0x1303);
  static TLS_AES_128_CCM_SHA256 = new CipherSuite(0x1304);
  static TLS_AES_128_CCM_8_SHA256 = new CipherSuite(0x1305);
  static TLS_FALLBACK_SCSV = new CipherSuite(0x5600);
  static TLS_ECDH_ECDSA_WITH_NULL_SHA = new CipherSuite(0xC001);
  static TLS_ECDH_ECDSA_WITH_RC4_128_SHA = new CipherSuite(0xC002);
  static TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA = new CipherSuite(0xC003);
  static TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA = new CipherSuite(0xC004);
  static TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA = new CipherSuite(0xC005);
  static TLS_ECDHE_ECDSA_WITH_NULL_SHA = new CipherSuite(0xC006);
  static TLS_ECDHE_ECDSA_WITH_RC4_128_SHA = new CipherSuite(0xC007);
  static TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA = new CipherSuite(0xC008);
  static TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA = new CipherSuite(0xC009);
  static TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA = new CipherSuite(0xC00A);
  static TLS_ECDH_RSA_WITH_NULL_SHA = new CipherSuite(0xC00B);
  static TLS_ECDH_RSA_WITH_RC4_128_SHA = new CipherSuite(0xC00C);
  static TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA = new CipherSuite(0xC00D);
  static TLS_ECDH_RSA_WITH_AES_128_CBC_SHA = new CipherSuite(0xC00E);
  static TLS_ECDH_RSA_WITH_AES_256_CBC_SHA = new CipherSuite(0xC00F);
  static TLS_ECDHE_RSA_WITH_NULL_SHA = new CipherSuite(0xC010);
  static TLS_ECDHE_RSA_WITH_RC4_128_SHA = new CipherSuite(0xC011);
  static TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA = new CipherSuite(0xC012);
  static TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA = new CipherSuite(0xC013);
  static TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA = new CipherSuite(0xC014);
  static TLS_ECDH_anon_WITH_NULL_SHA = new CipherSuite(0xC015);
  static TLS_ECDH_anon_WITH_RC4_128_SHA = new CipherSuite(0xC016);
  static TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA = new CipherSuite(0xC017);
  static TLS_ECDH_anon_WITH_AES_128_CBC_SHA = new CipherSuite(0xC018);
  static TLS_ECDH_anon_WITH_AES_256_CBC_SHA = new CipherSuite(0xC019);
  static TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA = new CipherSuite(0xC01A);
  static TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA = new CipherSuite(0xC01B);
  static TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA = new CipherSuite(0xC01C);
  static TLS_SRP_SHA_WITH_AES_128_CBC_SHA = new CipherSuite(0xC01D);
  static TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA = new CipherSuite(0xC01E);
  static TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA = new CipherSuite(0xC01F);
  static TLS_SRP_SHA_WITH_AES_256_CBC_SHA = new CipherSuite(0xC020);
  static TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA = new CipherSuite(0xC021);
  static TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA = new CipherSuite(0xC022);
  static TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 = new CipherSuite(0xC023);
  static TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 = new CipherSuite(0xC024);
  static TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256 = new CipherSuite(0xC025);
  static TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384 = new CipherSuite(0xC026);
  static TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 = new CipherSuite(0xC027);
  static TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 = new CipherSuite(0xC028);
  static TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256 = new CipherSuite(0xC029);
  static TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384 = new CipherSuite(0xC02A);
  static TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 = new CipherSuite(0xC02B);
  static TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 = new CipherSuite(0xC02C);
  static TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256 = new CipherSuite(0xC02D);
  static TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384 = new CipherSuite(0xC02E);
  static TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 = new CipherSuite(0xC02F);
  static TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 = new CipherSuite(0xC030);
  static TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256 = new CipherSuite(0xC031);
  static TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384 = new CipherSuite(0xC032);
  static TLS_ECDHE_PSK_WITH_RC4_128_SHA = new CipherSuite(0xC033);
  static TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA = new CipherSuite(0xC034);
  static TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA = new CipherSuite(0xC035);
  static TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA = new CipherSuite(0xC036);
  static TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256 = new CipherSuite(0xC037);
  static TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384 = new CipherSuite(0xC038);
  static TLS_ECDHE_PSK_WITH_NULL_SHA = new CipherSuite(0xC039);
  static TLS_ECDHE_PSK_WITH_NULL_SHA256 = new CipherSuite(0xC03A);
  static TLS_ECDHE_PSK_WITH_NULL_SHA384 = new CipherSuite(0xC03B);
  static TLS_RSA_WITH_ARIA_128_CBC_SHA256 = new CipherSuite(0xC03C);
  static TLS_RSA_WITH_ARIA_256_CBC_SHA384 = new CipherSuite(0xC03D);
  static TLS_DH_DSS_WITH_ARIA_128_CBC_SHA256 = new CipherSuite(0xC03E);
  static TLS_DH_DSS_WITH_ARIA_256_CBC_SHA384 = new CipherSuite(0xC03F);
  static TLS_DH_RSA_WITH_ARIA_128_CBC_SHA256 = new CipherSuite(0xC040);
  static TLS_DH_RSA_WITH_ARIA_256_CBC_SHA384 = new CipherSuite(0xC041);
  static TLS_DHE_DSS_WITH_ARIA_128_CBC_SHA256 = new CipherSuite(0xC042);
  static TLS_DHE_DSS_WITH_ARIA_256_CBC_SHA384 = new CipherSuite(0xC043);
  static TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256 = new CipherSuite(0xC044);
  static TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384 = new CipherSuite(0xC045);
  static TLS_DH_anon_WITH_ARIA_128_CBC_SHA256 = new CipherSuite(0xC046);
  static TLS_DH_anon_WITH_ARIA_256_CBC_SHA384 = new CipherSuite(0xC047);
  static TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256 = new CipherSuite(0xC048);
  static TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384 = new CipherSuite(0xC049);
  static TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256 = new CipherSuite(0xC04A);
  static TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384 = new CipherSuite(0xC04B);
  static TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256 = new CipherSuite(0xC04C);
  static TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384 = new CipherSuite(0xC04D);
  static TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256 = new CipherSuite(0xC04E);
  static TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384 = new CipherSuite(0xC04F);
  static TLS_RSA_WITH_ARIA_128_GCM_SHA256 = new CipherSuite(0xC050);
  static TLS_RSA_WITH_ARIA_256_GCM_SHA384 = new CipherSuite(0xC051);
  static TLS_DHE_RSA_WITH_ARIA_128_GCM_SHA256 = new CipherSuite(0xC052);
  static TLS_DHE_RSA_WITH_ARIA_256_GCM_SHA384 = new CipherSuite(0xC053);
  static TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256 = new CipherSuite(0xC054);
  static TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384 = new CipherSuite(0xC055);
  static TLS_DHE_DSS_WITH_ARIA_128_GCM_SHA256 = new CipherSuite(0xC056);
  static TLS_DHE_DSS_WITH_ARIA_256_GCM_SHA384 = new CipherSuite(0xC057);
  static TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256 = new CipherSuite(0xC058);
  static TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384 = new CipherSuite(0xC059);
  static TLS_DH_anon_WITH_ARIA_128_GCM_SHA256 = new CipherSuite(0xC05A);
  static TLS_DH_anon_WITH_ARIA_256_GCM_SHA384 = new CipherSuite(0xC05B);
  static TLS_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256 = new CipherSuite(0xC05C);
  static TLS_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384 = new CipherSuite(0xC05D);
  static TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256 = new CipherSuite(0xC05E);
  static TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384 = new CipherSuite(0xC05F);
  static TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256 = new CipherSuite(0xC060);
  static TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384 = new CipherSuite(0xC061);
  static TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256 = new CipherSuite(0xC062);
  static TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384 = new CipherSuite(0xC063);
  static TLS_PSK_WITH_ARIA_128_CBC_SHA256 = new CipherSuite(0xC064);
  static TLS_PSK_WITH_ARIA_256_CBC_SHA384 = new CipherSuite(0xC065);
  static TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256 = new CipherSuite(0xC066);
  static TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384 = new CipherSuite(0xC067);
  static TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256 = new CipherSuite(0xC068);
  static TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384 = new CipherSuite(0xC069);
  static TLS_PSK_WITH_ARIA_128_GCM_SHA256 = new CipherSuite(0xC06A);
  static TLS_PSK_WITH_ARIA_256_GCM_SHA384 = new CipherSuite(0xC06B);
  static TLS_DHE_PSK_WITH_ARIA_128_GCM_SHA256 = new CipherSuite(0xC06C);
  static TLS_DHE_PSK_WITH_ARIA_256_GCM_SHA384 = new CipherSuite(0xC06D);
  static TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256 = new CipherSuite(0xC06E);
  static TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384 = new CipherSuite(0xC06F);
  static TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256 = new CipherSuite(0xC070);
  static TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384 = new CipherSuite(0xC071);
  static TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 = new CipherSuite(0xC072);
  static TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 = new CipherSuite(0xC073);
  static TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 = new CipherSuite(0xC074);
  static TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 = new CipherSuite(0xC075);
  static TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 = new CipherSuite(0xC076);
  static TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384 = new CipherSuite(0xC077);
  static TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256 = new CipherSuite(0xC078);
  static TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384 = new CipherSuite(0xC079);
  static TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256 = new CipherSuite(0xC07A);
  static TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384 = new CipherSuite(0xC07B);
  static TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256 = new CipherSuite(0xC07C);
  static TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384 = new CipherSuite(0xC07D);
  static TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256 = new CipherSuite(0xC07E);
  static TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384 = new CipherSuite(0xC07F);
  static TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256 = new CipherSuite(0xC080);
  static TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384 = new CipherSuite(0xC081);
  static TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256 = new CipherSuite(0xC082);
  static TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384 = new CipherSuite(0xC083);
  static TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256 = new CipherSuite(0xC084);
  static TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384 = new CipherSuite(0xC085);
  static TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256 = new CipherSuite(0xC086);
  static TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384 = new CipherSuite(0xC087);
  static TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256 = new CipherSuite(0xC088);
  static TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384 = new CipherSuite(0xC089);
  static TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256 = new CipherSuite(0xC08A);
  static TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384 = new CipherSuite(0xC08B);
  static TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256 = new CipherSuite(0xC08C);
  static TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384 = new CipherSuite(0xC08D);
  static TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256 = new CipherSuite(0xC08E);
  static TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384 = new CipherSuite(0xC08F);
  static TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256 = new CipherSuite(0xC090);
  static TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384 = new CipherSuite(0xC091);
  static TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256 = new CipherSuite(0xC092);
  static TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384 = new CipherSuite(0xC093);
  static TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256 = new CipherSuite(0xC094);
  static TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384 = new CipherSuite(0xC095);
  static TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 = new CipherSuite(0xC096);
  static TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 = new CipherSuite(0xC097);
  static TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256 = new CipherSuite(0xC098);
  static TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384 = new CipherSuite(0xC099);
  static TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 = new CipherSuite(0xC09A);
  static TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 = new CipherSuite(0xC09B);
  static TLS_RSA_WITH_AES_128_CCM = new CipherSuite(0xC09C);
  static TLS_RSA_WITH_AES_256_CCM = new CipherSuite(0xC09D);
  static TLS_DHE_RSA_WITH_AES_128_CCM = new CipherSuite(0xC09E);
  static TLS_DHE_RSA_WITH_AES_256_CCM = new CipherSuite(0xC09F);
  static TLS_RSA_WITH_AES_128_CCM_8 = new CipherSuite(0xC0A0);
  static TLS_RSA_WITH_AES_256_CCM_8 = new CipherSuite(0xC0A1);
  static TLS_DHE_RSA_WITH_AES_128_CCM_8 = new CipherSuite(0xC0A2);
  static TLS_DHE_RSA_WITH_AES_256_CCM_8 = new CipherSuite(0xC0A3);
  static TLS_PSK_WITH_AES_128_CCM = new CipherSuite(0xC0A4);
  static TLS_PSK_WITH_AES_256_CCM = new CipherSuite(0xC0A5);
  static TLS_DHE_PSK_WITH_AES_128_CCM = new CipherSuite(0xC0A6);
  static TLS_DHE_PSK_WITH_AES_256_CCM = new CipherSuite(0xC0A7);
  static TLS_PSK_WITH_AES_128_CCM_8 = new CipherSuite(0xC0A8);
  static TLS_PSK_WITH_AES_256_CCM_8 = new CipherSuite(0xC0A9);
  static TLS_PSK_DHE_WITH_AES_128_CCM_8 = new CipherSuite(0xC0AA);
  static TLS_PSK_DHE_WITH_AES_256_CCM_8 = new CipherSuite(0xC0AB);
  static TLS_ECDHE_ECDSA_WITH_AES_128_CCM = new CipherSuite(0xC0AC);
  static TLS_ECDHE_ECDSA_WITH_AES_256_CCM = new CipherSuite(0xC0AD);
  static TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8 = new CipherSuite(0xC0AE);
  static TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8 = new CipherSuite(0xC0AF);
  static TLS_ECCPWD_WITH_AES_128_GCM_SHA256 = new CipherSuite(0xC0B0);
  static TLS_ECCPWD_WITH_AES_256_GCM_SHA384 = new CipherSuite(0xC0B1);
  static TLS_ECCPWD_WITH_AES_128_CCM_SHA256 = new CipherSuite(0xC0B2);
  static TLS_ECCPWD_WITH_AES_256_CCM_SHA384 = new CipherSuite(0xC0B3);
  static TLS_SHA256_SHA256 = new CipherSuite(0xC0B4);
  static TLS_SHA384_SHA384 = new CipherSuite(0xC0B5);
  static TLS_GOSTR341112_256_WITH_KUZNYECHIK_CTR_OMAC = new CipherSuite(0xC100);
  static TLS_GOSTR341112_256_WITH_MAGMA_CTR_OMAC = new CipherSuite(0xC101);
  static TLS_GOSTR341112_256_WITH_28147_CNT_IMIT = new CipherSuite(0xC102);
  static TLS_GOSTR341112_256_WITH_KUZNYECHIK_MGM_L = new CipherSuite(0xC103);
  static TLS_GOSTR341112_256_WITH_MAGMA_MGM_L = new CipherSuite(0xC104);
  static TLS_GOSTR341112_256_WITH_KUZNYECHIK_MGM_S = new CipherSuite(0xC105);
  static TLS_GOSTR341112_256_WITH_MAGMA_MGM_S = new CipherSuite(0xC106);
  static TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 = new CipherSuite(0xCCA8);
  static TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 = new CipherSuite(0xCCA9);
  static TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256 = new CipherSuite(0xCCAA);
  static TLS_PSK_WITH_CHACHA20_POLY1305_SHA256 = new CipherSuite(0xCCAB);
  static TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256 = new CipherSuite(0xCCAC);
  static TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256 = new CipherSuite(0xCCAD);
  static TLS_RSA_PSK_WITH_CHACHA20_POLY1305_SHA256 = new CipherSuite(0xCCAE);
  static TLS_ECDHE_PSK_WITH_AES_128_GCM_SHA256 = new CipherSuite(0xD001);
  static TLS_ECDHE_PSK_WITH_AES_256_GCM_SHA384 = new CipherSuite(0xD002);
  static TLS_ECDHE_PSK_WITH_AES_128_CCM_8_SHA256 = new CipherSuite(0xD003);
  static TLS_ECDHE_PSK_WITH_AES_128_CCM_SHA256 = new CipherSuite(0xD005);

  static deserialize(reader: BinaryReader) {
    return new CipherSuite(reader.readUInt16BE());
  }

  constructor(protected readonly id: number) {}

  getId() { return this.id }

  equals(other: CipherSuite): boolean {
    return other.getId() === this.getId();
  }

  serialize(): BinaryWriter {
    const writer = BinaryWriter.allocate(2);

    writer.writeUInt16BE(this.getId());

    return writer;
  }
}
